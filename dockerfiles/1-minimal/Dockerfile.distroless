# =============================================================================
# Minimal Go Application using Distroless Base
# Two-stage build with distroless for security and minimal size
# =============================================================================

FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

WORKDIR /app

# Copy go module files and download dependencies
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build static binary
RUN CGO_ENABLED=0 GOOS=linux go build \
    -a -installsuffix cgo \
    -ldflags='-w -s -extldflags "-static"' \
    -o main .

# =============================================================================
# Final stage - distroless (secure minimal image)
# =============================================================================
FROM gcr.io/distroless/static:nonroot

# Copy binary from builder
COPY --from=builder /app/main /main

# Expose port (consistent with application)
EXPOSE 8080

# Add metadata
LABEL \
    org.opencontainers.image.title="Gin Web Server (Distroless)" \
    org.opencontainers.image.description="Minimal Go web server using distroless base"

# distroless runs as nonroot user by default
# Run the application
ENTRYPOINT ["/main"]
